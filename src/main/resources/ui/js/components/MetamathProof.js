"use strict";

const MetamathProof = () => {

    const s = {
        PROOF_DTO: 'PROOF_DTO',
        PROOF_NODES_MAP: 'PROOF_NODES_MAP',
    }

    const [state, setState] = useState(() => createNewState({}))

    function createNewState({prevState, params}) {
        let proofDto = [{"id":0,"args":[40,19,39,34,1],"type":"P","label":"eqtr4i","params":[["class","A"],["class","B"],["class","C"],["|-","A","=","B"],["|-","C","=","B"]],"retVal":["|-","A","=","C"],"substitution":{"A":["(","2","+","2",")"],"B":["(","2","+","(","1","+","1",")",")"],"C":["4"]},"expr":["|-","(","2","+","2",")","=","4"]},{"id":1,"args":[33,29,26,19,18,9,2],"type":"P","label":"3eqtri","params":[["class","A"],["class","B"],["class","C"],["class","D"],["|-","A","=","B"],["|-","B","=","C"],["|-","C","=","D"]],"retVal":["|-","A","=","D"],"substitution":{"A":["4"],"B":["(","3","+","1",")"],"C":["(","(","2","+","1",")","+","1",")"],"D":["(","2","+","(","1","+","1",")",")"]},"expr":["|-","4","=","(","2","+","(","1","+","1",")",")"]},{"id":2,"args":[8,7,6,5,4,3],"type":"P","label":"addassi","params":[["class","A"],["class","B"],["class","C"],["|-","A","e.","CC"],["|-","B","e.","CC"],["|-","C","e.","CC"]],"retVal":["|-","(","(","A","+","B",")","+","C",")","=","(","A","+","(","B","+","C",")",")"],"substitution":{"A":["2"],"B":["1"],"C":["1"]},"expr":["|-","(","(","2","+","1",")","+","1",")","=","(","2","+","(","1","+","1",")",")"]},{"id":3,"args":[],"type":"A","label":"ax-1cn","params":[],"retVal":["|-","1","e.","CC"],"substitution":{},"expr":["|-","1","e.","CC"]},{"id":4,"args":[],"type":"A","label":"ax-1cn","params":[],"retVal":["|-","1","e.","CC"],"substitution":{},"expr":["|-","1","e.","CC"]},{"id":5,"args":[],"type":"P","label":"2cn","params":[],"retVal":["|-","2","e.","CC"],"substitution":{},"expr":["|-","2","e.","CC"]},{"id":6,"args":[],"type":"A","label":"c1","params":[],"retVal":["class","1"],"substitution":{},"expr":["class","1"]},{"id":7,"args":[],"type":"A","label":"c1","params":[],"retVal":["class","1"],"substitution":{},"expr":["class","1"]},{"id":8,"args":[],"type":"A","label":"c2","params":[],"retVal":["class","2"],"substitution":{},"expr":["class","2"]},{"id":9,"args":[17,13,12,11,10],"type":"P","label":"oveq1i","params":[["class","A"],["class","B"],["class","C"],["class","F"],["|-","A","=","B"]],"retVal":["|-","(","A","F","C",")","=","(","B","F","C",")"],"substitution":{"A":["3"],"B":["(","2","+","1",")"],"C":["1"],"F":["+"]},"expr":["|-","(","3","+","1",")","=","(","(","2","+","1",")","+","1",")"]},{"id":10,"args":[],"type":"A","label":"df-3","params":[],"retVal":["|-","3","=","(","2","+","1",")"],"substitution":{},"expr":["|-","3","=","(","2","+","1",")"]},{"id":11,"args":[],"type":"A","label":"caddc","params":[],"retVal":["class","+"],"substitution":{},"expr":["class","+"]},{"id":12,"args":[],"type":"A","label":"c1","params":[],"retVal":["class","1"],"substitution":{},"expr":["class","1"]},{"id":13,"args":[16,15,14],"type":"A","label":"co","params":[["class","A"],["class","B"],["class","F"]],"retVal":["class","(","A","F","B",")"],"substitution":{"A":["2"],"B":["1"],"F":["+"]},"expr":["class","(","2","+","1",")"]},{"id":14,"args":[],"type":"A","label":"caddc","params":[],"retVal":["class","+"],"substitution":{},"expr":["class","+"]},{"id":15,"args":[],"type":"A","label":"c1","params":[],"retVal":["class","1"],"substitution":{},"expr":["class","1"]},{"id":16,"args":[],"type":"A","label":"c2","params":[],"retVal":["class","2"],"substitution":{},"expr":["class","2"]},{"id":17,"args":[],"type":"A","label":"c3","params":[],"retVal":["class","3"],"substitution":{},"expr":["class","3"]},{"id":18,"args":[],"type":"A","label":"df-4","params":[],"retVal":["|-","4","=","(","3","+","1",")"],"substitution":{},"expr":["|-","4","=","(","3","+","1",")"]},{"id":19,"args":[25,21,20],"type":"A","label":"co","params":[["class","A"],["class","B"],["class","F"]],"retVal":["class","(","A","F","B",")"],"substitution":{"A":["2"],"B":["(","1","+","1",")"],"F":["+"]},"expr":["class","(","2","+","(","1","+","1",")",")"]},{"id":20,"args":[],"type":"A","label":"caddc","params":[],"retVal":["class","+"],"substitution":{},"expr":["class","+"]},{"id":21,"args":[24,23,22],"type":"A","label":"co","params":[["class","A"],["class","B"],["class","F"]],"retVal":["class","(","A","F","B",")"],"substitution":{"A":["1"],"B":["1"],"F":["+"]},"expr":["class","(","1","+","1",")"]},{"id":22,"args":[],"type":"A","label":"caddc","params":[],"retVal":["class","+"],"substitution":{},"expr":["class","+"]},{"id":23,"args":[],"type":"A","label":"c1","params":[],"retVal":["class","1"],"substitution":{},"expr":["class","1"]},{"id":24,"args":[],"type":"A","label":"c1","params":[],"retVal":["class","1"],"substitution":{},"expr":["class","1"]},{"id":25,"args":[],"type":"A","label":"c2","params":[],"retVal":["class","2"],"substitution":{},"expr":["class","2"]},{"id":26,"args":[13,28,27],"type":"A","label":"co","params":[["class","A"],["class","B"],["class","F"]],"retVal":["class","(","A","F","B",")"],"substitution":{"A":["(","2","+","1",")"],"B":["1"],"F":["+"]},"expr":["class","(","(","2","+","1",")","+","1",")"]},{"id":27,"args":[],"type":"A","label":"caddc","params":[],"retVal":["class","+"],"substitution":{},"expr":["class","+"]},{"id":28,"args":[],"type":"A","label":"c1","params":[],"retVal":["class","1"],"substitution":{},"expr":["class","1"]},{"id":29,"args":[32,31,30],"type":"A","label":"co","params":[["class","A"],["class","B"],["class","F"]],"retVal":["class","(","A","F","B",")"],"substitution":{"A":["3"],"B":["1"],"F":["+"]},"expr":["class","(","3","+","1",")"]},{"id":30,"args":[],"type":"A","label":"caddc","params":[],"retVal":["class","+"],"substitution":{},"expr":["class","+"]},{"id":31,"args":[],"type":"A","label":"c1","params":[],"retVal":["class","1"],"substitution":{},"expr":["class","1"]},{"id":32,"args":[],"type":"A","label":"c3","params":[],"retVal":["class","3"],"substitution":{},"expr":["class","3"]},{"id":33,"args":[],"type":"A","label":"c4","params":[],"retVal":["class","4"],"substitution":{},"expr":["class","4"]},{"id":34,"args":[38,21,37,36,35],"type":"P","label":"oveq2i","params":[["class","A"],["class","B"],["class","C"],["class","F"],["|-","A","=","B"]],"retVal":["|-","(","C","F","A",")","=","(","C","F","B",")"],"substitution":{"A":["2"],"B":["(","1","+","1",")"],"C":["2"],"F":["+"]},"expr":["|-","(","2","+","2",")","=","(","2","+","(","1","+","1",")",")"]},{"id":35,"args":[],"type":"A","label":"df-2","params":[],"retVal":["|-","2","=","(","1","+","1",")"],"substitution":{},"expr":["|-","2","=","(","1","+","1",")"]},{"id":36,"args":[],"type":"A","label":"caddc","params":[],"retVal":["class","+"],"substitution":{},"expr":["class","+"]},{"id":37,"args":[],"type":"A","label":"c2","params":[],"retVal":["class","2"],"substitution":{},"expr":["class","2"]},{"id":38,"args":[],"type":"A","label":"c2","params":[],"retVal":["class","2"],"substitution":{},"expr":["class","2"]},{"id":39,"args":[],"type":"A","label":"c4","params":[],"retVal":["class","4"],"substitution":{},"expr":["class","4"]},{"id":40,"args":[43,42,41],"type":"A","label":"co","params":[["class","A"],["class","B"],["class","F"]],"retVal":["class","(","A","F","B",")"],"substitution":{"A":["2"],"B":["2"],"F":["+"]},"expr":["class","(","2","+","2",")"]},{"id":41,"args":[],"type":"A","label":"caddc","params":[],"retVal":["class","+"],"substitution":{},"expr":["class","+"]},{"id":42,"args":[],"type":"A","label":"c2","params":[],"retVal":["class","2"],"substitution":{},"expr":["class","2"]},{"id":43,"args":[],"type":"A","label":"c2","params":[],"retVal":["class","2"],"substitution":{},"expr":["class","2"]}];
        return createObj({
            [s.PROOF_DTO]: proofDto,
            [s.PROOF_NODES_MAP]: proofDto.reduce((acc,node) => ({...acc,[node.id]:node}),{}),
        })
    }

    const tableStyle = {borderCollapse: 'collapse', border: '1px solid lightgray', fontSize: '15px', padding:'10px'};
    return RE.table({style:{borderCollapse: 'collapse'}},
        RE.tbody({style:{borderCollapse: 'collapse'}},
            RE.tr({style: {}},
                RE.th({key:'node-id'}),
                RE.th({key:'explanation'}),
            ),
            state[s.PROOF_DTO].map(node => RE.tr({key: `node-${node.id}`, style: {}},
                RE.td({style: {...tableStyle}}, node.id),
                RE.td({style: {...tableStyle}},
                    hasValue(node.args)
                        ? re(RuleProofNode,{node, allNodes:state[s.PROOF_NODES_MAP]})
                        : re(ConstProofNode,{node})
                ),
            ))
        )
    )
}
